{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n// Função para buscar todos os itens\nexport const fetchItems = async () => {\n  try {\n    const response = await api.get('/items');\n    return response.data || []; // Garante que retorna um array, mesmo se a API retornar `null` ou `undefined`\n  } catch (error) {\n    console.error('Error fetching items:', error);\n    throw error; // Repassa o erro para ser tratado pelo chamador\n  }\n};\n\n// Função para criar um novo item\nexport const createItem = async item => {\n  try {\n    const response = await api.post('/items', item);\n    console.log('Item created:', response.data); // Verifique os dados retornados pelo backend\n    return response.data;\n  } catch (error) {\n    console.error('Error creating item:', error);\n    throw error;\n  }\n};\n\n// Função para atualizar um item existente\nexport const updateItem = async (id, item) => {\n  try {\n    console.log('Updating item with ID:', id, 'Data:', item); // Log para depuração\n    const response = await api.put(`/items/${id}`, item);\n    return response.data; // Retorna os dados da resposta\n  } catch (error) {\n    console.error('Error updating item:', error);\n    throw error; // Repassa o erro para ser tratado pelo chamador\n  }\n};\n\n// Função para deletar um item\nexport const deleteItem = async id => {\n  try {\n    console.log('Deleting item with ID:', id); // Log para depuração\n    const response = await api.delete(`/items/${id}`);\n    return response.data; // Retorna os dados da resposta\n  } catch (error) {\n    console.error('Error deleting item:', error);\n    throw error; // Repassa o erro para ser tratado pelo chamador\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","fetchItems","response","get","data","error","console","createItem","item","post","log","updateItem","id","put","deleteItem","delete"],"sources":["C:/Users/mathe/OneDrive/Documentos/Projects/crud-app/my-crud-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:8080/api',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n// Função para buscar todos os itens\r\nexport const fetchItems = async () => {\r\n    try {\r\n        const response = await api.get('/items');\r\n        return response.data || [];  // Garante que retorna um array, mesmo se a API retornar `null` ou `undefined`\r\n    } catch (error) {\r\n        console.error('Error fetching items:', error);\r\n        throw error;  // Repassa o erro para ser tratado pelo chamador\r\n    }\r\n};\r\n\r\n// Função para criar um novo item\r\nexport const createItem = async (item) => {\r\n    try {\r\n        const response = await api.post('/items', item);\r\n        console.log('Item created:', response.data);  // Verifique os dados retornados pelo backend\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating item:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Função para atualizar um item existente\r\nexport const updateItem = async (id, item) => {\r\n    try {\r\n        console.log('Updating item with ID:', id, 'Data:', item);  // Log para depuração\r\n        const response = await api.put(`/items/${id}`, item);\r\n        return response.data;  // Retorna os dados da resposta\r\n    } catch (error) {\r\n        console.error('Error updating item:', error);\r\n        throw error;  // Repassa o erro para ser tratado pelo chamador\r\n    }\r\n};\r\n\r\n// Função para deletar um item\r\nexport const deleteItem = async (id) => {\r\n    try {\r\n        console.log('Deleting item with ID:', id);  // Log para depuração\r\n        const response = await api.delete(`/items/${id}`);\r\n        return response.data;  // Retorna os dados da resposta\r\n    } catch (error) {\r\n        console.error('Error deleting item:', error);\r\n        throw error;  // Repassa o erro para ser tratado pelo chamador\r\n    }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AACF;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC,CAAE;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;IAC/CF,OAAO,CAACI,GAAG,CAAC,eAAe,EAAER,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;IAC9C,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEJ,IAAI,KAAK;EAC1C,IAAI;IACAF,OAAO,CAACI,GAAG,CAAC,wBAAwB,EAAEE,EAAE,EAAE,OAAO,EAAEJ,IAAI,CAAC,CAAC,CAAE;IAC3D,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACgB,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEJ,IAAI,CAAC;IACpD,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAE;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG,MAAOF,EAAE,IAAK;EACpC,IAAI;IACAN,OAAO,CAACI,GAAG,CAAC,wBAAwB,EAAEE,EAAE,CAAC,CAAC,CAAE;IAC5C,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACkB,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;IACjD,OAAOV,QAAQ,CAACE,IAAI,CAAC,CAAE;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}