{"ast":null,"code":"import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nconst mock = new MockAdapter(axios);\nlet items = [{\n  id: 1,\n  name: 'Item 1',\n  description: 'Description 1',\n  price: 10.0,\n  quantity: 100\n}, {\n  id: 2,\n  name: 'Item 2',\n  description: 'Description 2',\n  price: 20.0,\n  quantity: 200\n}, {\n  id: 3,\n  name: 'Item 3',\n  description: 'Description 3',\n  price: 30.0,\n  quantity: 300\n}];\nmock.onGet('/api/items').reply(200, items);\nmock.onPost('/api/items').reply(config => {\n  const newItem = JSON.parse(config.data);\n  newItem.id = items.length + 1;\n  items.push(newItem);\n  return [200, newItem];\n});\nmock.onPut(/\\/api\\/items\\/\\d+/).reply(config => {\n  const id = parseInt(config.url.split('/').pop());\n  const updatedItem = JSON.parse(config.data);\n  items = items.map(item => item.id === id ? updatedItem : item);\n  return [200, updatedItem];\n});\nmock.onDelete(/\\/api\\/items\\/\\d+/).reply(config => {\n  const id = parseInt(config.url.split('/').pop());\n  items = items.filter(item => item.id !== id);\n  return [200];\n});\nexport default mock;","map":{"version":3,"names":["axios","MockAdapter","mock","items","id","name","description","price","quantity","onGet","reply","onPost","config","newItem","JSON","parse","data","length","push","onPut","parseInt","url","split","pop","updatedItem","map","item","onDelete","filter"],"sources":["C:/Users/mathe/OneDrive/Documentos/Projects/crud-app/my-crud-app/src/mock.js"],"sourcesContent":["import axios from 'axios';\r\nimport MockAdapter from 'axios-mock-adapter';\r\n\r\nconst mock = new MockAdapter(axios);\r\n\r\nlet items = [\r\n    { id: 1, name: 'Item 1', description: 'Description 1', price: 10.0, quantity: 100 },\r\n    { id: 2, name: 'Item 2', description: 'Description 2', price: 20.0, quantity: 200 },\r\n    { id: 3, name: 'Item 3', description: 'Description 3', price: 30.0, quantity: 300 },\r\n];\r\n\r\nmock.onGet('/api/items').reply(200, items);\r\nmock.onPost('/api/items').reply((config) => {\r\n    const newItem = JSON.parse(config.data);\r\n    newItem.id = items.length + 1;\r\n    items.push(newItem);\r\n    return [200, newItem];\r\n});\r\nmock.onPut(/\\/api\\/items\\/\\d+/).reply((config) => {\r\n    const id = parseInt(config.url.split('/').pop());\r\n    const updatedItem = JSON.parse(config.data);\r\n    items = items.map((item) => (item.id === id ? updatedItem : item));\r\n    return [200, updatedItem];\r\n});\r\nmock.onDelete(/\\/api\\/items\\/\\d+/).reply((config) => {\r\n    const id = parseInt(config.url.split('/').pop());\r\n    items = items.filter((item) => item.id !== id);\r\n    return [200];\r\n});\r\n\r\nexport default mock;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,MAAMC,IAAI,GAAG,IAAID,WAAW,CAACD,KAAK,CAAC;AAEnC,IAAIG,KAAK,GAAG,CACR;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,KAAK,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAI,CAAC,EACnF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,KAAK,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAI,CAAC,EACnF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,WAAW,EAAE,eAAe;EAAEC,KAAK,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAI,CAAC,CACtF;AAEDN,IAAI,CAACO,KAAK,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC,GAAG,EAAEP,KAAK,CAAC;AAC1CD,IAAI,CAACS,MAAM,CAAC,YAAY,CAAC,CAACD,KAAK,CAAEE,MAAM,IAAK;EACxC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;EACvCH,OAAO,CAACT,EAAE,GAAGD,KAAK,CAACc,MAAM,GAAG,CAAC;EAC7Bd,KAAK,CAACe,IAAI,CAACL,OAAO,CAAC;EACnB,OAAO,CAAC,GAAG,EAAEA,OAAO,CAAC;AACzB,CAAC,CAAC;AACFX,IAAI,CAACiB,KAAK,CAAC,mBAAmB,CAAC,CAACT,KAAK,CAAEE,MAAM,IAAK;EAC9C,MAAMR,EAAE,GAAGgB,QAAQ,CAACR,MAAM,CAACS,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EAChD,MAAMC,WAAW,GAAGV,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;EAC3Cb,KAAK,GAAGA,KAAK,CAACsB,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACtB,EAAE,KAAKA,EAAE,GAAGoB,WAAW,GAAGE,IAAK,CAAC;EAClE,OAAO,CAAC,GAAG,EAAEF,WAAW,CAAC;AAC7B,CAAC,CAAC;AACFtB,IAAI,CAACyB,QAAQ,CAAC,mBAAmB,CAAC,CAACjB,KAAK,CAAEE,MAAM,IAAK;EACjD,MAAMR,EAAE,GAAGgB,QAAQ,CAACR,MAAM,CAACS,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EAChDpB,KAAK,GAAGA,KAAK,CAACyB,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACtB,EAAE,KAAKA,EAAE,CAAC;EAC9C,OAAO,CAAC,GAAG,CAAC;AAChB,CAAC,CAAC;AAEF,eAAeF,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}